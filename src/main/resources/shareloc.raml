#%RAML 1.0
title: Shareloc
baseUri: http://shareloc/api/{version}
version: 1
mediaType: "application/json"

types:
  User:
    type: object
    properties:
        userId: integer
        pseudo: string
        email: string
        firstname: string
        lastname: string
  UserWithPassword:
    type: User
    properties:
      password: string
  UserWithToken:
    type: User
    properties:
      token: string
  Users:
    type: User[]
  Houseshare:
      type: object
      properties:
        houseshareId: integer
        name: string
        manager: User
        users: Users
        houseshareServices: Services
  Houseshares:
    type: Houseshare[]

  Service:
    type: object
    properties:
      houseshare: Houseshare
      title: string
      description: string
      cost: integer
  Services:
    type: Service[]

  AchievedService:
    type: object
    properties:
      service: Service
      houseshare: Houseshare
      from: User
      to: User
      date: date-only
      picture: string
      valid: boolean
      
/signin:
  post:
    description: Log into the account and provide the token
    body:
      type: object
      properties:
        email: string
        password: string
    responses:
      200:
        body:
          type: UserWithToken
      401:
/signup:
  post:
    description: Create an account
    body:
      type: UserWithPassword
    responses:
      201:
        body:
          type: User
/whoami:
  get:
    description: Get the user using the token
    responses:
      200:
        body:
          type: User

/houseshares:
  description: "Collection of houseshares"
  get:
    description: Get the list of houseshares of which the user is a part.
    queryParameters:
      name:
        description: The name of the houseshare to search
        required: false
        type: string
        example: "The great houseshare"
    responses:
      200:
        body:
          type: Houseshares
          example:
            [
              {
                "houseshareId": 1,
                "name": "La coloc'",
                "manager": {
                  "userId": 1,
                  "pseudo": "Deewens",
                  "email": "dudonadrien@gmail.com",
                  "firstname": "Adrien",
                  "lastname": "Dudon"
                },
                "users": [
                  {
                    "userId": 1,
                    "pseudo": "Deewens",
                    "email": "dudonadrien@gmail.com",
                    "firstname": "Adrien",
                    "lastname": "Dudon"
                  },
                  {
                    "userId": 2,
                    "pseudo": "KSHMR",
                    "email": "kshmr@gmail.com",
                    "firstname": "Test",
                    "lastname": "Test"
                  }
                ],
                "houseshareServices": []
              }
            ]
  post:
      description: Create a new houseshare
      body:
        type: object
        properties:
          name: string
      responses:
        201:
          body:
            type: Houseshare
  /{houseshareId}:
    get:
      description: Get one houseshare of which the user is a part.
      responses:
        200:
          body:
            type: Houseshare
            example:
              {
              "houseshareId": 1,
              "name": "La coloc'",
              "manager": {
                "userId": 1,
                "pseudo": "Deewens",
                "email": "dudonadrien@gmail.com",
                "firstname": "Adrien",
                "lastname": "Dudon"
              },
              "users": [
                {
                  "userId": 1,
                  "pseudo": "Deewens",
                  "email": "dudonadrien@gmail.com",
                  "firstname": "Adrien",
                  "lastname": "Dudon"
                },
                {
                  "userId": 2,
                  "pseudo": "KSHMR",
                  "email": "kshmr@gmail.com",
                  "firstname": "Test",
                  "lastname": "Test"
                }
              ],
              "houseshareServices": []
            }
    put:
      description: Update the given houseshare
      body:
        type: Houseshare
      responses:
        200:
          body:
            type: Houseshare
    patch:
      description: Patch the houseshare
    delete:
      description: Delete the househsare
    /members:
      post:
      get:
      /{userId}:
        get:
        delete:
    /services:
      post:
      get:
      /{serviceId}:
        get:
        delete:
        
/achievedservice:
  description: Collection of the achieved services
  get:
    description: Get the list of the achieved services of the user househsare
    queryParameters:
      from?:
        description: "The user who did the service"
        type: User
      to?:
        description: "The user who received the service"
        type: User
  post:
    description: Create an achieved services for the househare user (the user need to be in the given househsare)
    body:
      type: object
      properties:
        serviceId:
          description: "The service ID which was achieved"
          type: integer
        houseshareId:
          description: "The househare ID of the acheived service"
          type: integer
        userId:
          displayName: To
          description: "The user who receveid the service"
          type: integer
        date?:
          description: "The date of the service (if not provided, the date will be the current date)"
          type: date-only
        picture:
          description: "The proof picture of the achived service"
          type: file
    responses:
      200:
        body:
          type: AchievedService
          
	/{achievedServiceId}:
	  get:
	  put:
	  patch:
	  delete: